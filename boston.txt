1.import numpy as np
import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import MinMaxScaler
from tensorflow.keras.models import Sequential
from tensorflow.keras.layers import Dense #import dense layer from tensorflow keras library 

2.df = pd.read_csv("HousingData.csv")
df

3.df.isnull().sum()

4.df.ffill(inplace=True)
df.isna().sum()

5.df.head()

6.
x=df.drop('MEDV',axis=1)
y=df['MEDV']
x_train, x_test, y_train, y_test = train_test_split(x, y, train_size=0.2, random_state=1)

7.
scaler = MinMaxScaler()
x_train = scaler.fit_transform(x_train)
x_test = scaler.transform(x_test)

8.model = Sequential() #import sequential model from tensorflow keras library

model.add(Dense(128, input_shape=(13, ), activation='relu', name='dense_1'))
model.add(Dense(64, activation='relu', name='dense_2'))
model.add(Dense(1, activation='linear', name='dense_output'))

model.compile(loss='mae', optimizer='adam', metrics=['mse', 'mae'])
model.summary()

9.model.fit(x_train, y_train, epochs=50)

10.loss , mse , mae = model.evaluate(x_test, y_test)
print('Mean absolute error on test data: ', mae)
print('Mean squared error on test data: ', mse)

11.y_pred = model.predict(x_test)
y_test = np.array(y_test).reshape(-1,1)
print("\nSample Predictions:")
for i in range(5):
    print("Predicted: " + str(round(y_pred[i][0], 2)) + " | Actual: " + str(round(y_test[i][0], 2)))

12.import matplotlib.pyplot as plt
plt.plot(y_test, label='Actual')
plt.plot(y_pred, label='Predicted')
plt.legend()